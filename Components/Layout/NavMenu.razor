@using Microsoft.AspNetCore.Components.Authorization
@using UsedPhonesWebShop.Services
@using UsedPhonesWebShop.Shared.Models
@inject IAuthService AuthService
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager NavigationManager

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="/">UsedPhonesWebShop</a>
        <AuthorizeView>
            <Authorized>
                <span>Hello, @context.User.Identity?.Name!</span>
                <button @onclick="Logout" class="btn btn-link">Logout</button>
            </Authorized>
            <NotAuthorized>
                <a class="nav-link" href="/login">Login</a>
                <a class="nav-link" href="/register">Register</a>
            </NotAuthorized>
        </AuthorizeView>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" @onclick="ToggleMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/phones">
                <span class="bi bi-phone-nav-menu" aria-hidden="true"></span> Phones
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/offers">
                <span class="bi bi-clipboard-nav-menu" aria-hidden="true"></span> Offers
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/cart">
                <span class="bi bi-cart-nav-menu" aria-hidden="true"></span> Cart
            </NavLink>
        </div>
    </nav>
</div>

@code {
    private void ToggleMenu()
    {
        var toggler = document.querySelector('.navbar-toggler') as Element;
        toggler?.Click();
    }

    private async Task Logout()
    {
        await AuthService.Logout();
        if (AuthStateProvider is CustomAuthStateProvider customAuthStateProvider)
        {
            customAuthStateProvider.NotifyUserLogout();
        }
        NavigationManager.NavigateTo("/");
    }
}